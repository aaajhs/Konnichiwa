name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - cicd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Build and save Docker image
      run: |
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c 1-7)
        docker build -t komodo-assignment:$SHORT_SHA .
        docker save -o ${{ runner.temp }}/komodo-assignment.tar komodo-assignment:$SHORT_SHA

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: komodo-assignment-image
        path: ${{ runner.temp }}/komodo-assignment.tar

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: komodo-assignment-image
        path: ${{ runner.temp }}

    - name: Load image and run container
      run: |
        docker load --input ${{ runner.temp }}/komodo-assignment.tar
        docker image ls -a
        IMAGE_TAG=$(docker image ls --format "{{.Tag}}" komodo-assignment)
        docker run -d -e API_KEY="${{ secrets.API_KEY }}" -p 4000:4000 --name komodo-assignment komodo-assignment:$IMAGE_TAG

    - name: Test container functionality
      run: |
        # Wait for container to start
        for i in {1..10}; do
          curl -s http://localhost:4000/ && break
          echo "Waiting for container to start..."
          docker ps -a
          sleep 1
        done

        # Test / endpoint
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4000/)
        if [ "$RESPONSE" -ne 200 ]; then
          echo "/ endpoint failed with response $RESPONSE"
          exit 1
        fi

        # Test /health endpoint
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4000/health)
        if [ "$RESPONSE" -ne 200 ]; then
          echo "/health endpoint failed with response $RESPONSE"
          exit 1
        fi

        # Test /inspect endpoint with API Key
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.API_KEY }}" http://localhost:4000/inspect)
        if [ "$RESPONSE" -ne 200 ]; then
          echo "/inspect endpoint failed with response $RESPONSE"
          exit 1
        fi

        # Test /inspect endpoint without API Key
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4000/inspect)
        if [ "$RESPONSE" -ne 403 ]; then
          echo "API key protection failed with response $RESPONSE"
          exit 1
        fi

    - name: Stop and remove container
      run: |
        docker stop komodo-assignment
        docker rm komodo-assignment
